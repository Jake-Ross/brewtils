# -*- coding: utf-8 -*-

import six

from brewtils.resolvers import ResolverBase

BYTES_PREFIX = "BGBytesID:"


class BytesResolver(ResolverBase):
    """Resolver that uses the Beergarden file API"""

    def __init__(self, easy_client):
        self.easy_client = easy_client

    def should_upload(self, value, **_):
        return isinstance(value, six.binary_type)

    def upload(self, value, **_):
        """Upload the bytes value to the server

        Args:
            value: Value to upload.

        Returns:
            A valid beer garden assigned ID
        """
        return self.easy_client.upload_file(value)

    def should_download(self, value, **_):
        if isinstance(value, six.string_types) and BYTES_PREFIX in value:
            return True
        return False

    def download(self, file_id, **_):
        """Download the given bytes parameter.

        Args:
            file_id: A BG generated bytes ID
        """
        real_id = file_id.partition(BYTES_PREFIX)[2]

        return self.easy_client.download_file(real_id)
